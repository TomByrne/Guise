<?xml version="1.0" encoding="utf-8"?>
<class classpath="guise.platform.Starling" >

	<meth name="install" static="true" public="true" scope="within" a-within="composure.core.ComposeItem">

		<var type="guise.platform.cross.AccessProvider" addCall="addTrait">
			<m-mapAccessType params="guise.accessTypes.ITextureAccess, guise.platform.starling.accessTypes.TextureAccess"/>
			<m-mapAccessType params="guise.accessTypes.IMouseInteractionsAccess, guise.platform.starling.accessTypes.MouseInteractionsAccess"/>
			<m-mapAccessType params="guise.accessTypes.ITextInputAccess, guise.platform.starling.accessTypes.TextInputAccess"/>
			<m-mapAccessType params="guise.accessTypes.ITextOutputAccess, guise.platform.starling.accessTypes.TextOutputAccess"/>
			<m-mapAccessType params="guise.accessTypes.IMouseClickableAccess, guise.platform.cross.accessTypes.MouseClickEmulator"/>
			<m-mapAccessType params="guise.accessTypes.IFocusableAccess, guise.platform.starling.accessTypes.TextInputAccess"/>
			<!--<m-mapAccessType params="guise.accessTypes.IKeyboardAccess, guise.platform.starling.accessTypes.KeyboardAccess"/> -->
			<m-mapAccessType params="guise.layer.ILayerContainer, guise.platform.starling.display.LayerSwapper"/>
			<m-mapAccessType params="guise.frame.IFrameTicker, guise.platform.starling.core.FrameTicker"/>
		</var>

		<!-- Core display tags -->
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.WindowTag" addCall="addTrait" p-searchAscendants="true" p-searchDescendants="false">
			<m-addInst params="guise.platform.starling.display.StageTrait.inst(),guise.platform.starling.display.StageTrait"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.StageTag" addCall="addTrait" p-searchAscendants="true" p-searchDescendants="false">
			<m-addInst params="guise.platform.starling.display.StageTrait.inst(),guise.platform.starling.display.StageTrait"/>
			<m-addType params="guise.frame.FrameExecutor"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.ContainerTag" addCall="addTrait">
			<m-addType params="guise.platform.starling.display.ContainerTrait,guise.platform.starling.display.ContainerTrait"/>
		</var>

		<!-- Core control logic -->
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.TextButtonTag" addCall="addTrait">
			<m-addType params="guise.controls.logic.input.MouseOverTrait"/>
			<m-addType params="guise.controls.logic.states.ButtonStateMapper"/>
			<m-addType params="guise.controls.logic.input.ButtonClickTrait"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.TextButtonTag" addCall="addTrait" m-setCheckProps="{selectable:true}">
			<m-addType params="guise.controls.logic.states.SelectableStateMapper"/>
			<m-addType params="guise.controls.logic.input.ClickToggleSelect"/>
			<m-addType params="guise.controls.data.ISelected.Selected, guise.controls.data.ISelected"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.TextInputTag" addCall="addTrait">
			<m-addType params="guise.controls.logic.input.TextInputPrompt"/>
			<m-addType params="guise.controls.logic.states.FocusStateMapper"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.ToggleButtonTag" addCall="addTrait">
			<m-addType params="guise.controls.logic.input.MouseOverTrait"/>
			<m-addType params="guise.controls.logic.states.ButtonStateMapper"/>
			<m-addType params="guise.controls.logic.input.ButtonClickTrait"/>
			<m-addType params="guise.controls.logic.input.ClickToggleSelect"/>
			<m-addType params="guise.controls.logic.states.SelectableStateMapper"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.SliderTag" addCall="addTrait">
			<m-addType params="guise.controls.logic.input.MouseOverTrait"/>
			<m-addType params="guise.controls.logic.states.ButtonStateMapper"/>
			<m-addFact params="function(into:Dynamic):Dynamic return new guise.controls.logic.input.MouseDragChangeValue(null,true,guise.controls.data.INumRange,'valueNorm',null,null,new guise.skin.values.Calc(Multiply, [new guise.skin.values.Value(0.8), new guise.skin.values.Width()]))"/>
			<m-addType params="guise.controls.data.INumRange.NumRange, guise.controls.data.INumRange"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.ControlTags.PanelTag" addCall="addTrait">
			<m-addType params="guise.controls.scroll.MeasSizeScroll"/>
			<m-addFact params="function(into:Dynamic):Dynamic return new guise.platform.starling.logic.ScrollRect(new guise.skin.values.Bind(guise.controls.scroll.IScrollMetrics.IHScrollMetrics, 'scroll'), new guise.skin.values.Bind(guise.controls.scroll.IScrollMetrics.IVScrollMetrics, 'scroll'), new guise.skin.values.Width(), new guise.skin.values.Height())"/>
		</var>


		<!-- Additional control logic -->
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.platform.starling.addTypes.IDisplayObjectType" addCall="addTrait">
			<m-addType params="guise.platform.starling.display.ContainerTrait, guise.platform.starling.display.ContainerTrait"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.scroll.IScrollMetrics.IHScrollMetrics" addCall="addTrait">
			<m-addType params="guise.controls.logic.states.ScrollStateMapper, guise.controls.logic.states.ScrollStateMapper"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.controls.scroll.IScrollMetrics.IVScrollMetrics" addCall="addTrait">
			<m-addType params="guise.controls.logic.states.ScrollStateMapper, guise.controls.logic.states.ScrollStateMapper"/>
		</var>
	</meth>
</class>