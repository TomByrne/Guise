<?xml version="1.0" encoding="utf-8"?>
<class classpath="guise.platform.Waxe" >

	<meth name="install" static="true" public="true" scope="within" a-within="composure.core.ComposeItem">

		<var type="guise.platform.cross.AccessProvider" addCall="addTrait">
			<m-mapAccessType params="guise.frame.IFrameTicker, guise.platform.waxe.logic.FrameTicker"/>
		</var>

		<!-- Core display tags -->
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.WindowTag" addCall="addTrait" p-searchAscendants="true" p-searchDescendants="false">
			<m-addInst params="guise.platform.waxe.display.WindowTrait.inst()"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.StageTag" addCall="addTrait" p-searchAscendants="true" p-searchDescendants="false">
			<m-addInst params="guise.platform.waxe.display.StageTrait.inst()"/>
			<m-addType params="guise.frame.FrameExecutor"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.core.CoreTags.ContainerTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.display.ContainerTrait,guise.platform.waxe.display.ContainerTrait"/>
		</var>

		<!-- Core control logic -->
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.PanelTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.PanelTrait"/>
		</var>
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.TextButtonTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.TextButtonTrait"/>
			<m-addType params="guise.platform.waxe.logic.MouseClickable"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.TextButtonTag" addCall="addTrait" m-setCheckProps="{selectable:true}">
			<m-addType params="guise.logic.input.ClickToggleSelect"/>
			<m-addType params="guise.data.ISelected.Selected, guise.data.ISelected"/>
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.TextInputTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.TextInputTrait"/>
			<!-- <m-addType params="guise.logic.input.TextInputPrompt"/> -->
		</var>
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.TextLabelTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.TextLabelTrait"/>
		</var> 
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.ToggleButtonTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.CheckBoxTrait"/>
		</var>
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.SliderTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.SliderTrait"/>
			<m-addType params="guise.data.INumRange.NumRange, guise.data.INumRange"/>
		</var>
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.ListBoxTag" addCall="addTrait">
			<m-addType params="guise.platform.waxe.controls.ListBoxTrait"/>
		</var>
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.OptionPickerTag(false)" addCall="addTrait" p-checkEnumParams="[0]">
			<m-addType params="guise.platform.waxe.controls.OptionPickerTrait"/>
		</var>
		 <var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.ControlTags.OptionPickerTag(true)" addCall="addTrait" p-checkEnumParams="[0]">
			<m-addFact params="function(into:Dynamic):Dynamic return new guise.platform.waxe.controls.OptionPickerTrait(true)"/>
		</var>


		<!-- Additional control logic -->
		<var type="composure.utilTraits.Furnisher" p-concernedTraitType="guise.data.IControlInfo" addCall="addTrait" m-setCheckProps="{type:guise.data.IControlInfo.ControlInfoType.FocusTip}">
			<m-addType params="guise.platform.waxe.logic.ToolTipAdder"/>
		</var>
	</meth>
</class>